{"version":3,"sources":["index.js"],"names":["App","state","phrase","phrases","limit","results","_this$state","this","push","setState","newPhrase","e","index","_this$state2","splice","length","_this$state3","concat","i","Math","floor","random","key","handleAdd","_this2","_this$state4","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","class","type","value","onChange","onPhraseChange","target","onKeyDown","handleKeyDown","onClick","map","item","className","removePhrase","increment","decrement","getRandom","result","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6NAKMA,oNACJC,MAAQ,CACNC,OAAQ,GACRC,QAAS,CAAC,WAAY,QAAS,SAAU,QACzCC,MAAO,EACPC,QAAS,+EAGC,IAAAC,EACgBC,KAAKN,MAAzBE,EADIG,EACJH,QAASD,EADLI,EACKJ,OACfC,EAAQK,KAAKN,GACbK,KAAKE,SAAS,CAAEN,QAASA,EAASD,OAAQ,4CAG7BQ,GACbH,KAAKE,SAAS,CACZP,OAAQQ,yCAICC,EAAGC,GAAO,IAAAC,EACIN,KAAKN,MAAxBG,EADeS,EACfT,MAAOD,EADQU,EACRV,QACbA,EAAQW,OAAOF,EAAO,GACtBL,KAAKE,SAAS,CAAEN,YACZC,GAASD,EAAQY,SACnBX,EAAQD,EAAQY,QAElBR,KAAKE,SAAS,CAAEL,8CAGN,IAAAY,EACeT,KAAKN,MAAxBG,EADIY,EACJZ,MAAOD,EADHa,EACGb,UACbC,GACaD,EAAQY,SACnBX,EAAQD,EAAQY,QAElBR,KAAKE,SAAS,CAAEL,8CAGN,IACJA,EAAUG,KAAKN,MAAfG,MACNG,KAAKE,SAAS,CAAEL,MAAOA,KAAW,EAAI,IAAMA,wCAO5C,IAJU,IACJA,EAAUG,KAAKN,MAAfG,MACFC,EAAU,GACVF,EAAU,GAAGc,OAAOV,KAAKN,MAAME,SAC1Be,EAAI,EAAGA,EAAId,EAAOc,IACzBb,EAAQG,KAAKL,EAAQW,OAAOK,KAAKC,MAAMD,KAAKE,SAAWlB,EAAQY,QAAQ,IAEzER,KAAKE,SAAS,CAAEJ,kDAGJiB,GACA,UAARA,GACFf,KAAKgB,6CAIA,IAAAC,EAAAjB,KAAAkB,EACqClB,KAAKN,MAAzCG,EADDqB,EACCrB,MAAOD,EADRsB,EACQtB,QAASD,EADjBuB,EACiBvB,OAAQG,EADzBoB,EACyBpB,QAChC,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACTH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAArB,GAAC,OAAIa,EAAKS,eAAetB,EAAEuB,OAAOH,QAC5CI,UAAW,SAAAxB,GAAC,OAAIa,EAAKY,cAAczB,EAAEW,QAEvCI,EAAAC,EAAAC,cAAA,UACES,QAAS,WACPb,EAAKD,cAFT,KAOAG,EAAAC,EAAAC,cAAA,UACGzB,EAAQmC,IAAI,SAACC,EAAM3B,GAAP,OACXc,EAAAC,EAAAC,cAAA,MAAIN,IAAKV,GACN2B,EAAM,IACPb,EAAAC,EAAAC,cAAA,QACEY,UAAU,iBACVH,QAAS,SAAA1B,GACPa,EAAKiB,aAAa9B,EAAGC,KAHzB,WAWNc,EAAAC,EAAAC,cAAA,qBACUxB,EADV,QAEEsB,EAAAC,EAAAC,cAAA,UACES,QAAS,WACPb,EAAKkB,cAFT,KAOAhB,EAAAC,EAAAC,cAAA,UACES,QAAS,WACPb,EAAKmB,cAFT,MAQFjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACES,QAAS,WACPb,EAAKoB,cAFT,eAQFlB,EAAAC,EAAAC,cAAA,WACGvB,EAAQiC,IAAI,SAACO,EAAQjC,GAAT,OACXc,EAAAC,EAAAC,cAAA,KAAGN,IAAKV,GAAQiC,cA1HVC,IAAMC,YAkIlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO1B,EAAAC,EAAAC,cAAC5B,EAAD,MAASgD","file":"static/js/main.a3226dad.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    phrase: \"\",\n    phrases: [\"elephant\", \"scray\", \"coffee\", \"tofu\"],\n    limit: 1,\n    results: []\n  };\n\n  handleAdd() {\n    let { phrases, phrase } = this.state;\n    phrases.push(phrase);\n    this.setState({ phrases: phrases, phrase: \"\" });\n  }\n\n  onPhraseChange(newPhrase) {\n    this.setState({\n      phrase: newPhrase\n    });\n  }\n\n  removePhrase(e, index) {\n    let { limit, phrases } = this.state;\n    phrases.splice(index, 1);\n    this.setState({ phrases });\n    if (limit >= phrases.length) {\n      limit = phrases.length;\n    }\n    this.setState({ limit });\n  }\n\n  increment() {\n    let { limit, phrases } = this.state;\n    limit++;\n    if (limit >= phrases.length) {\n      limit = phrases.length;\n    }\n    this.setState({ limit });\n  }\n\n  decrement() {\n    let { limit } = this.state;\n    this.setState({ limit: limit-- <= 0 ? \"0\" : limit });\n  }\n\n  getRandom() {\n    let { limit } = this.state;\n    let results = [];\n    let phrases = [].concat(this.state.phrases);\n    for (let i = 0; i < limit; i++) {\n      results.push(phrases.splice(Math.floor(Math.random() * phrases.length),1));\n    }\n    this.setState({ results });\n  }\n\n  handleKeyDown(key) {\n    if (key === 'Enter') {\n      this.handleAdd();\n    }\n  }\n\n  render() {\n    const { limit, phrases, phrase, results } = this.state;\n    return (\n      <div class=\"App\">\n        <h1>Callipygian Momotaro</h1>\n        <input\n          type=\"text\"\n          value={phrase}\n          onChange={e => this.onPhraseChange(e.target.value)}\n          onKeyDown={e => this.handleKeyDown(e.key)}\n        />\n        <button\n          onClick={() => {\n            this.handleAdd();\n          }}\n        >\n          +\n        </button>\n        <ul>\n          {phrases.map((item, index) => (\n            <li key={index}>\n              {item}{\" \"}\n              <span\n                className=\"clickable-text\"\n                onClick={e => {\n                  this.removePhrase(e, index);\n                }}\n              >\n                [x]\n              </span>\n            </li>\n          ))}\n        </ul>\n        <div>\n          Limit: {limit} &nbsp;\n          <button\n            onClick={() => {\n              this.increment();\n            }}\n          >\n            +\n          </button>\n          <button\n            onClick={() => {\n              this.decrement();\n            }}\n          >\n            -\n          </button>\n        </div>\n        <br />\n        <div>\n          <button\n            onClick={() => {\n              this.getRandom();\n            }}\n          >\n            Get Random\n          </button>\n        </div>\n        <div>\n          {results.map((result, index) => (\n            <p key={index}>{result}</p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}